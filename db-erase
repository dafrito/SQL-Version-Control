#!/bin/bash
# Deletes all installed tables from the specified database.
PATH=/bin:/usr/bin:$HOME/bin:${0%/*}

source db-library.sh;
source db-load-settings.sh
source db-get-password.sh;

load_tables
egrep -xq 'patches' <$TABLES || error "Nothing to erase in $db"

staged=$TEMP_ROOT/staged
last_error=$TEMP_ROOT/last_error

load_history
awk -f $DB_UTILS_ROOT/db-get-installed-tables.awk <$PATCH_HISTORY | source db-filter-tables.sh >$staged
if [ ! -s $staged ]; then
    echo "Nothing to erase in $db" 1>&2
    exit 0;
fi;

if [ ! $FORCE ]; then
    echo "Installed tables in $db:"
    cat $staged
    read -p"Destroy listed tables in $db? (y/n): " r
    case $r in
        y*) ;;
        *) exit 1
    esac
fi

tries=0
errors=0
while [ $tries -lt 20 ]; do
    log "Starting erase, attempt $tries"
    for table in `cat $staged`; do
        log "Attempting to drop '$table'"
        sql_raw "drop view if exists $table; drop table if exists $table;" 2>$last_error
        if [ -s $last_error ]; then
            let errors++;
            warn "error during removal: $(cat $last_error)"
        fi
    done
    if [ $errors = 0 ]; then
        break
    else
        warn "removal failed with $errors error(s)"
        errors=0
    fi
    let tries++
done

[ $errors -lt 1 ] || error "remove failed after 20 tries"

sql "truncate patches; truncate patch_changelog"

load_tables
if [ $(source db-filter-tables.sh <$TABLES | wc -l) -gt 0 ]; then 
    echo 'The following untracked tables were not removed:'
    source db-filter-tables.sh <$TABLES
fi;
