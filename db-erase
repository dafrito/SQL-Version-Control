#!/bin/bash
# Deletes all installed tables from the specified database.
PATH=/bin:/usr/bin:$HOME/bin:${0%/*}

source db-load-settings.sh
source db-get-password.sh;

function get_tables {
    if ! mysql $db -u $user -p"$PASSWORD" -e"show tables" -N; then
        exit 2
    fi
}

function log {
    if [ -z $log ]; then
        return
    fi
    echo "$db: " $* >>$log
}

if ! get_tables | egrep -x 'patches' >/dev/null; then
    echo "db: nothing to erase in $db" 1>&2
    exit 0;
fi

history=/tmp/db-erase-$db-history.$$
staged=/tmp/db-erase-$db-staged.$$
last_error=/tmp/db-erase-$db-error.$$

function cleanup {
    rm -f $staged $tables $last_error $history
}
trap cleanup EXIT
trap 'echo; cleanup; exit 1' INT TERM

function get_history {
    if ! mysql $db -u $user -p"$PASSWORD" -e"select table_name,type,order_applied from patch_history" -N; then
        exit 2
    fi;
}

get_history | db-get-installed-tables.awk | source db-filter-tables.sh >$staged
if [ ! -s $staged ]; then
    echo "db: nothing to erase in $db" 1>&2
    exit 0;
fi;

if [ ! $FORCE ]; then
    echo "Installed tables in $db:"
    cat $staged
    read -p"Destroy listed tables in $db? (y/n): " r
    case $r in
        y*) ;;
        *) exit 1
    esac
fi

tries=0
errors=0
while [ $tries -lt 20 ]; do
    log "[II] Starting erase, attempt $tries"
    for table in `cat $staged`; do
        log "[II] Attempting to drop '$table'"
        mysql $db -u "$user" -p"$PASSWORD" -e"drop view if exists $table; drop table if exists $table;" 2>$last_error
        if [ -s $last_error ]; then
            let errors++;
            log "[WW] error during removal: $(cat $last_error)"
        fi
    done
    if [ $errors = 0 ]; then
        break
    else
        log "[WW] removal failed with $errors error(s)"
        errors=0
    fi
    let tries++
done
if [ $errors -gt 0 ]; then
    log "[EE] remove failed after 20 tries"
    echo "db: could not remove all tables" 1>&2
    if [ -n $log ]; then
        echo "See $log for more information" 1>&2
    fi
    exit 2
fi

if ! mysql $db -u "$user" -p"$PASSWORD" -e"truncate patches; truncate patch_changelog"; then
    exit 2
fi

if [ $(get_tables | source db-filter-tables.sh | wc -l) -gt 0 ]; then 
    echo 'The following untracked tables were not removed:'
    get_tables | source db-filter-tables.sh;
fi;
